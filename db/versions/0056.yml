version: 56
description: Remove unnecessary etag column from the hooks_queues table
migrationScript: |-
  begin
    alter table hooks_queues drop column etag;
  end
downgradeScript: |-
  begin
    alter table hooks_queues add column etag uuid not null default public.gen_random_uuid();
  end
methods:
  create_hooks_queue:
    description: |-
      Create a new hooks queue. Raises UNIQUE_VIOLATION if the hook already exists.
    mode: write
    serviceName: hooks
    args: hook_group_id_in text, hook_id_in text, queue_name_in text, bindings_in jsonb
    returns: uuid
    body: |-
      begin
        insert
          into hooks_queues (hook_group_id, hook_id, queue_name, bindings)
          values (hook_group_id_in, hook_id_in, queue_name_in, bindings_in);
          return public.gen_random_uuid();
      end
  delete_hooks_queue:
    description: |-
      Delete a hooks queue.
    mode: write
    serviceName: hooks
    args: hook_group_id_in text, hook_id_in text
    returns: void
    body: |-
      begin
        delete from hooks_queues
        where
          hooks_queues.hook_group_id = hook_group_id_in and
          hooks_queues.hook_id = hook_id_in;
      end
  get_hooks_queues:
    description: |-
      Get hooks queues ordered by `hook_group_id` and `hook_id`.
      If the pagination arguments are both NULL, all rows are returned.
      Otherwise, page_size rows are returned at offset page_offset.
    mode: read
    serviceName: hooks
    args: page_size_in integer, page_offset_in integer
    returns: table(hook_group_id text, hook_id text, queue_name text, bindings jsonb, etag uuid)
    body: |-
      begin
        return query
        select
          hooks_queues.hook_group_id,
          hooks_queues.hook_id,
          hooks_queues.queue_name,
          hooks_queues.bindings,
          public.gen_random_uuid()
        from hooks_queues
        order by hook_group_id, hook_id
        limit get_page_limit(page_size_in)
        offset get_page_offset(page_offset_in);
      end
  update_hooks_queue_bindings:
    description: |-
      Update bindings of a hooks queue. If no such queue exists,
      the return value is an empty set.
    mode: write
    serviceName: hooks
    args: hook_group_id_in text, hook_id_in text, bindings_in jsonb
    returns: table(hook_group_id text, hook_id text, queue_name text, bindings jsonb, etag uuid)
    body: |-
      begin
        return query update hooks_queues
        set
          bindings = bindings_in
        where
          hooks_queues.hook_group_id = hook_group_id_in and
          hooks_queues.hook_id = hook_id_in
        returning
          hooks_queues.hook_group_id,
          hooks_queues.hook_id,
          hooks_queues.queue_name,
          hooks_queues.bindings,
          public.gen_random_uuid();
      end
